<UserControl x:Class="ModuleA.Views.AuthorView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:views="clr-namespace:ModuleA.Views"
             xmlns:viewModels="clr-namespace:ModuleA.ViewModels"
             xmlns:converters="clr-namespace:ModuleA.Converters"
             xmlns:prism="http://prismlibrary.com/"
             xmlns:Custom="http://www.codeplex.com/prism"
             prism:ViewModelLocator.AutoWireViewModel="True">
    <UserControl.DataContext>
        <viewModels:AuthorViewViewModel/>
    </UserControl.DataContext>
    <i:Interaction.Triggers>
        <i:EventTrigger>
            <i:InvokeCommandAction Command="{Binding LoadCommand, Mode=OneWay}"/>
        </i:EventTrigger>
        <Custom:InteractionRequestTrigger SourceObject="{Binding ConfirmRequest}">
            <Custom:PopupWindowAction CenterOverAssociatedObject="True" IsModal="True"/>
        </Custom:InteractionRequestTrigger>
        <Custom:InteractionRequestTrigger SourceObject="{Binding EditRequest}">
            <Custom:PopupWindowAction CenterOverAssociatedObject="True" IsModal="True">
                <Custom:PopupWindowAction.WindowContent>
                    <views:AuthorEditView/>
                </Custom:PopupWindowAction.WindowContent>
            </Custom:PopupWindowAction>
        </Custom:InteractionRequestTrigger>
    </i:Interaction.Triggers>

    <UserControl.Resources>
        <ResourceDictionary>
            <converters:MultipleCommandParametersConverter x:Key="MultipleCommandParametersConverter"/>
            <Style x:Key="CheckBoxHeaderStyle" TargetType="{x:Type DataGridColumnHeader}">
                <Setter Property="Margin" Value="0,10"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="HorizontalAlignment" Value="Center"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <CheckBox IsChecked="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Path=DataContext.IsCheckedHeader.Value, UpdateSourceTrigger=PropertyChanged}"
                                Command="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Path=DataContext.HeaderCheckCommand}"
                                CommandParameter="{Binding IsChecked, RelativeSource={RelativeSource Self}}"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="CheckBoxItemStyle" TargetType="{x:Type CheckBox}">
                <Setter Property="Margin" Value="5,1"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="HorizontalAlignment" Value="Center"/>
                <Setter Property="IsChecked" Value="{Binding IsChecked.Value, UpdateSourceTrigger=PropertyChanged}"/>
                <Setter Property="Command" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Path=DataContext.CheckCommand}"/>
                <Setter Property="CommandParameter">
                    <Setter.Value>
                        <MultiBinding Converter="{StaticResource MultipleCommandParametersConverter}">
                            <Binding Path="IsChecked" RelativeSource="{RelativeSource Self}"/>
                            <Binding Path="Id.Value"/>
                        </MultiBinding>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="DataGridRowStyle" TargetType="{x:Type DataGridRow}">
                <Style.Triggers>
                    <Trigger Property="ItemsControl.AlternationIndex" Value="0">
                        <Setter Property="Background" Value="White"/>
                    </Trigger>
                    <Trigger Property="ItemsControl.AlternationIndex" Value="1">
                        <Setter Property="Background" Value="WhiteSmoke"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style x:Key="DataGridCellStyle" TargetType="{x:Type DataGridCell}">
                <Style.Triggers>
                    <Trigger Property="IsSelected" Value="true">
                        <Setter Property="Background" Value="WhiteSmoke"/>
                        <Setter Property="Foreground" Value="Black"/>
                    </Trigger>
                    <DataTrigger Binding="{Binding IsChecked.Value, UpdateSourceTrigger=PropertyChanged}" Value="True">
                        <Setter Property="Background" Value="LightCyan"/>
                    </DataTrigger>
                </Style.Triggers>
            </Style>
            
        </ResourceDictionary>
    </UserControl.Resources>
    
    <Grid Margin="10,10,10,10">
        <Grid.RowDefinitions>
            <RowDefinition Height="30"/>
            <RowDefinition Height="25"/>
            <RowDefinition Height="25"/>
            <RowDefinition Height="380"/>
            <RowDefinition Height="25"/>
        </Grid.RowDefinitions>

        <Grid Grid.Row="0">
            <TextBlock Text="Author List" FontSize="18"/>
        </Grid>

        <Grid Grid.Row="1">
            <Menu>
                <MenuItem Header="Edit" Command="{Binding EditCommand, Mode=OneWay}"/>
                <MenuItem Header="Delete" Command="{Binding DeleteCommand, Mode=OneWay}"/>
            </Menu>
        </Grid>

        <StackPanel Grid.Row="2" Orientation="Horizontal">
            <Label Content="Name："/>
            <TextBox Text="{Binding InputAuthor.Value.Name.Value, UpdateSourceTrigger=PropertyChanged}"
                     TextWrapping="Wrap"
                     Height="23" Width="200"/>
            <Label Content="Birthday："/>
            <DatePicker SelectedDate="{Binding InputAuthor.Value.Birthday.Value, UpdateSourceTrigger=PropertyChanged}"
                        Height="23" Width="100"/>
            <Label Content="Gender："/>
            <ComboBox ItemsSource="{Binding Genders}"
                      SelectedValue="{Binding InputAuthor.Value.Gender.Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                      Height="23" Width="75"/>
            <Button Content="Add" Command="{Binding AddCommand, Mode=OneWay}" Height="23" Width="75"/>
        </StackPanel>

        <DataGrid Grid.Row="3"
                  AutoGenerateColumns="False"
                  ItemsSource="{Binding Authors}"
                  IsReadOnly="True"
                  SelectionMode="Single"
                  AlternationCount="2"
                  ScrollViewer.CanContentScroll="True"
                  ScrollViewer.VerticalScrollBarVisibility="Auto"
                  ScrollViewer.HorizontalScrollBarVisibility="Auto"
                  RowStyle="{StaticResource DataGridRowStyle}"
                  CellStyle="{StaticResource DataGridCellStyle}">
            <DataGrid.Columns>
                <DataGridCheckBoxColumn HeaderStyle="{StaticResource CheckBoxHeaderStyle}"
                                        ElementStyle="{StaticResource CheckBoxItemStyle}"
                                        IsReadOnly="False"
                                        ClipboardContentBinding="{x:Null}"/>
                <DataGridTextColumn Header="Name"
                                    Binding="{Binding Name.Value}"
                                    ClipboardContentBinding="{x:Null}"/>
                <DataGridTextColumn Header="Birthday"
                                    Binding="{Binding Birthday.Value}"
                                    ClipboardContentBinding="{x:Null}"/>
                <DataGridTextColumn Header="Gender"
                                    Binding="{Binding Gender.Value}"
                                    ClipboardContentBinding="{x:Null}"/>
            </DataGrid.Columns>
        </DataGrid>

        <StackPanel Grid.Row="5" Orientation="Horizontal">
            <Label Content="Counted："/>
            <TextBlock
                Text="{Binding CountedAuthor.Value, Mode=OneWay}"
                VerticalAlignment="Center"
                TextWrapping="Wrap"/>
        </StackPanel>
    </Grid>
</UserControl>
